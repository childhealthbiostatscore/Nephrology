library(tidyverse)
library(knitr)
library(tableone)
# upload data d
data_d <- read_csv("S:/Brinton/Nephrology/2024.03.06 Shih NINJA - RAI mephrotoxin exposures in ICU and clincal course retrospective cohort/data/data_d.csv")
##################################################################################################################################
# report of recordid, aki date, aki stage, highest stage, highest date, whether the dates/stages differ
# data_d_report = data_d %>% select(record_id, contains("aki"), contains("AKI"),time_flag_to_peak, time_flag_to_AKI, date_of_maximum_scr_during, start_date_for_ntmx_encoun)
# note there are 3 subj who had time_flag_to_peak missing, in code, john looked at date of max sccr_during and start date of ntmx encounter -- use these?
data_d_report = data_d %>% select(record_id, aki_episode_start_date,aki_episode_resolution_dat, initial_aki_stage,
highest_aki_stage_for_this, time_flag_to_AKI,time_flag_to_peak,
date_of_maximum_scr_during, start_date_for_ntmx_encoun)
# since initial aki is in form Stage 1 Stage 2 Stage 3
# and highest is:
# Stage 1 (0.3 increase in Daily Scr  or Daily Scr 1.5 - 1.9 times baseline),
# Stage 2 (Daily Scr 2 - 2.9 times baseline)
# Stage 3 (Daily Scr >= 3 times baseline or provision of dialysis for an AKI related reason)
# we will just see if the string from initial is in the highest
data_d_report$FLAG_Stage <- !mapply(function(a, b) grepl(a, b, fixed = TRUE), data_d_report$initial_aki_stage, data_d_report$highest_aki_stage_for_this)
# there are 3 subj: 67, 79, 83 who are missing the time to highest and date of max scr; these subj will be flagged in addition to the subj where the dates do not match
data_d_report$FLAG_Dates = !ifelse(is.na(data_d_report$time_flag_to_peak), FALSE, data_d_report$time_flag_to_peak == data_d_report$time_flag_to_AKI)
data_d_report = data_d_report %>% select(record_id, time_flag_to_AKI, time_flag_to_peak, initial_aki_stage, highest_aki_stage_for_this, FLAG_Stage, FLAG_Dates)
##################################################################################################################################
data_d_ranges = data_d %>% select(record_id, additional_comments, supratherapeutic_vancomyci, gentamicin_trough_2, tacrolimus_level_15, cyclosporine_level_300)
##################################################################################################################################
# report of aki differences
# all subj
sum(data_d_report$FLAG_Stage); sum(data_d_report$FLAG_Dates)
# looking at stages flags
kable(data_d_report %>% filter(FLAG_Stage ==1))
# looking at dates flags
kable(data_d_report %>% filter(FLAG_Dates ==1))
# additional comments variable seems not what we are looking for with the supratherapeutic ranges
kable(table(data_d$additional_comments))
# lets look at the supratherapeutic variables in the data dictionary to see if this is enlightening at all
CreateTableOne(data = data_d_ranges %>% select(-record_id), includeNA  = T)
# confirm death variable fixed
table(data_d$death)
# confirm death variable fixed
table(data_d$death)
13/59
# report of aki differences
# all subj
sum(data_d_report$FLAG_Stage); sum(data_d_report$FLAG_Dates)
# looking at stages flags
kable(data_d_report %>% filter(FLAG_Stage ==1))
library(haven)
library(tidyverse)
library(knitr)
library(tableone)
# Add labels to the variables
data_d_report <- labelled::set_variable_labels(
data_d_report$,
# Add labels to the variables
data_d_report <- labelled::set_variable_labels(
data_d_report,
record_id = "Record ID",
time_flag_to_AKI = "Days from Flag to AKI",
time_flag_to_peak = "Days from Flag to Peak",
initial_aki_stage = "Initial AKI Stage",
highest_aki_stage_for_this = "Peak AKI Stage",
FLAG_Stage = "Different Initial/Peak AKI Stage",
FLAG_Dates = "Different Initial/Peak Dates"
)
# looking at stages flags
kable(data_d_report %>% filter(FLAG_Stage ==1))
View(data_d_ranges)
View(data_d_report)
# looking at stages flags
kable(data_d_report %>% filter(FLAG_Stage ==1), label = T)
library(tableone)
CreateTableOne(data=data_d_report %>% filter(FLAG_Stage ==1))
# Add labels to the variables
labels_vector <- c(
"Record ID",
"Days from Flag to AKI",
"Days from Flag to Peak",
"Initial AKI Stage",
"Peak AKI Stage",
"Different Initial/Peak AKI Stage",
"Different Initial/Peak Dates"
)
labels(data_d_report) = labels_vector
?labels
base::labels(data_d_report) = labels_vector
names(labels_vector) <- names(data_d_report)
for (i in seq_along(data_d_report)) {
attr(data_d_report[[i]], "label") <- labels_vector[i]
}
CreateTableOne(data=data_d_report %>% filter(FLAG_Stage ==1), label)
CreateTableOne(data=data_d_report %>% filter(FLAG_Stage ==1))
# looking at stages flags
kable(data_d_report %>% filter(FLAG_Stage ==1), label = T)
# looking at stages flags
kable(data_d_report %>% filter(FLAG_Stage ==1), labels = T)
# looking at stages flags
kable(data_d_report %>% filter(FLAG_Stage ==1),col.names = labels_vector)
# looking at dates flags
kable(data_d_report %>% filter(FLAG_Dates ==1),col.names = labels_vector)
# additional comments variable seems not what we are looking for with the supratherapeutic ranges
kable(table(data_d$additional_comments))
# additional comments variable seems not what we are looking for with the supratherapeutic ranges
kable(table(data_d$additional_comments),col.names = c("Additional Comments", "Freq"))
# additional comments variable seems not what we are looking for with the supratherapeutic ranges
kable(table(data_d$additional_comments),col.names = c("Additional Comments", "Freq"))
# lets look at the supratherapeutic variables in the data dictionary to see if this is enlightening at all
CreateTableOne(data = data_d_ranges %>% select(-record_id), includeNA  = T)
library(table1)
library(table1)
table1(data=data_d_ranges %>% select(-record_id, -additional_comments))
labels_vector2 = c("Vancomycin > 15", "Gentamicin Trough > 2", "Tacromilus Level > 15", "Cyclosporine Level > 300")
ranget1 = table1(data=data_d_ranges %>% select(-record_id, -additional_comments), labels = labels_vector2)
names(data_d_ranges) = names(labels_vector2)
View(data_d_ranges)
##################################################################################################################################
data_d_ranges = data_d %>% select(record_id, additional_comments, supratherapeutic_vancomyci, gentamicin_trough_2, tacrolimus_level_15, cyclosporine_level_300)
labels_vector2 = c("Record ID","Additional Comments", "Vancomycin > 15", "Gentamicin Trough > 2", "Tacromilus Level > 15", "Cyclosporine Level > 300")
names(labels_vector2) <- names(data_d_ranges)
for (i in seq_along(data_d_ranges)) {
attr(data_d_ranges[[i]], "label") <- labels_vector2[i]
}
library(table1)
ranget1 = table1(data=data_d_ranges %>% select(-record_id, -additional_comments))
ranget1 = table1(~.,data=data_d_ranges %>% select(-record_id, -additional_comments))
ranget1
table(data_d_report$initial_aki_stage)
table(data_d_report$highest_aki_stage_for_this)
table(data_d_report$initial_aki_stage)
table(data_d_report$highest_aki_stage_for_this)
13/72
# confirm death variable fixed
kable(table(data_d$death))
data_d$death = factor(data_d$death, labels = c("No", "Yes"))
# confirm death variable fixed
kable(table(data_d$death))
library(tidyverse)
library(knitr)
library(haven)
# upload data d
data_d <- read_csv("S:/Brinton/Nephrology/2024.03.06 Shih NINJA - RAI mephrotoxin exposures in ICU and clincal course retrospective cohort/data/data_d.csv")
data_d$death = factor(data_d$death, labels = c("No", "Yes"))
##################################################################################################################################
# report of recordid, aki date, aki stage, highest stage, highest date, whether the dates/stages differ
# data_d_report = data_d %>% select(record_id, contains("aki"), contains("AKI"),time_flag_to_peak, time_flag_to_AKI, date_of_maximum_scr_during, start_date_for_ntmx_encoun)
# note there are 3 subj who had time_flag_to_peak missing, in code, john looked at date of max sccr_during and start date of ntmx encounter -- use these?
data_d_report = data_d %>% select(record_id, aki_episode_start_date,aki_episode_resolution_dat, initial_aki_stage,
highest_aki_stage_for_this, time_flag_to_AKI,time_flag_to_peak,
date_of_maximum_scr_during, start_date_for_ntmx_encoun)
# since initial aki is in form Stage 1 Stage 2 Stage 3
# and highest is:
# Stage 1 (0.3 increase in Daily Scr  or Daily Scr 1.5 - 1.9 times baseline),
# Stage 2 (Daily Scr 2 - 2.9 times baseline)
# Stage 3 (Daily Scr >= 3 times baseline or provision of dialysis for an AKI related reason)
# we will just see if the string from initial is in the highest
data_d_report$FLAG_Stage <- !mapply(function(a, b) grepl(a, b, fixed = TRUE), data_d_report$initial_aki_stage, data_d_report$highest_aki_stage_for_this)
# there are 3 subj: 67, 79, 83 who are missing the time to highest and date of max scr; these subj will be flagged in addition to the subj where the dates do not match
data_d_report$FLAG_Dates = !ifelse(is.na(data_d_report$time_flag_to_peak), FALSE, data_d_report$time_flag_to_peak == data_d_report$time_flag_to_AKI)
# select vars
data_d_report = data_d_report %>% select(record_id, time_flag_to_AKI, time_flag_to_peak, initial_aki_stage, highest_aki_stage_for_this, FLAG_Stage, FLAG_Dates)
# Add labels to the variables
labels_vector <- c(
"Record ID",
"Days from Flag to AKI",
"Days from Flag to Peak",
"Initial AKI Stage",
"Peak AKI Stage",
"Different Initial/Peak AKI Stage",
"Different Initial/Peak Dates"
)
names(labels_vector) <- names(data_d_report)
for (i in seq_along(data_d_report)) {
attr(data_d_report[[i]], "label") <- labels_vector[i]
}
data_d_report <- labelled::set_variable_labels(
data_d_report,
record_id = "Record ID",
time_flag_to_AKI = "Days from Flag to AKI",
time_flag_to_peak = "Days from Flag to Peak",
initial_aki_stage = "Initial AKI Stage",
highest_aki_stage_for_this = "Peak AKI Stage",
FLAG_Stage = "Different Initial/Peak AKI Stage",
FLAG_Dates = "Different Initial/Peak Dates"
)
##################################################################################################################################
data_d_ranges = data_d %>% select(record_id, additional_comments, supratherapeutic_vancomyci, gentamicin_trough_2, tacrolimus_level_15, cyclosporine_level_300)
labels_vector2 = c("Record ID","Additional Comments", "Vancomycin > 15", "Gentamicin Trough > 2", "Tacromilus Level > 15", "Cyclosporine Level > 300")
names(labels_vector2) <- names(data_d_ranges)
for (i in seq_along(data_d_ranges)) {
attr(data_d_ranges[[i]], "label") <- labels_vector2[i]
}
library(table1)
ranget1 = table1(~.,data=data_d_ranges %>% select(-record_id, -additional_comments))
##################################################################################################################################
#######################
# SUPRATHERAPEUTIC COMMENTS DATA
st_comments<- read.csv("S:/Brinton/Nephrology/2024.03.06 Shih NINJA - RAI mephrotoxin exposures in ICU and clincal course retrospective cohort/data/st_vanc_comment.csv")
# pull comments from supratherapeutic variables
varcom_list = c("supratherapeutic_vancomyci","cyclosporine_level_300","gentamicin_trough_2", "tacrolimus_level_15")
st_comments = st_comments %>% filter(Field %in% varcom_list)
# table(st_comments$Comment, st_comments$Field)
# st_comments_v = st_comments %>% filter(Field =="supratherapeutic_vancomyci")
# st_comments_c = st_comments %>% filter(Field =="cyclosporine_level_300")
# st_comments_t = st_comments %>% filter(Field =="tacrolimus_level_15")
# Function to process comments
extract_values <- function(comment) {
# Remove dose-related phrases (e.g., "4 doses", "3/31", "5/10")
clean_comment <- str_replace_all(comment, "\\b\\d+\\s*doses?\\b", "") # Remove "X doses"
clean_comment <- str_replace_all(clean_comment, "\\b\\d+/\\d+\\b", "") # Remove date-like "X/X"
# Extract all relevant numerical values
numbers <- str_extract_all(clean_comment, "\\b\\d+\\.?\\d*\\b") %>% unlist() %>% as.numeric()
highest_value <- ifelse(length(numbers) > 0, max(numbers, na.rm = TRUE), NA)
first_value <- ifelse(length(numbers) > 0, numbers[1], NA)
multiple_values <- ifelse(length(numbers) > 1, 1, 0)
# Missing flag is 1 if no valid numbers or if explicit missing indicators are present
missing_flag <- ifelse(length(numbers) == 0 | str_detect(comment, "<|not detected|N/A|no levels available"), 1, 0)
# Extract goal range (handles "goal was X-Y", "goal is X-Y", and "goal X-Y")
goal_match <- str_match(clean_comment, "goal (?:was |is )?(\\d+)[-–](\\d+)")
goal_min <- ifelse(!is.na(goal_match[2]), as.numeric(goal_match[2]), NA)
goal_max <- ifelse(!is.na(goal_match[3]), as.numeric(goal_match[3]), NA)
return(c(highest_value, first_value, multiple_values, missing_flag, goal_min, goal_max))
}
# Apply function to each comment
st_comments <- st_comments %>%
rowwise() %>%
mutate(
highest_value = extract_values(Comment)[1],
first_value = extract_values(Comment)[2],
multiple_values = extract_values(Comment)[3],
missing_flag = extract_values(Comment)[4],
goal_min = extract_values(Comment)[5],
goal_max = extract_values(Comment)[6]
)
###########################
View(st_comments)
# Function to process comments
extract_values <- function(comment) {
# Remove dose-related phrases (e.g., "4 doses", "3/31", "5/10")
clean_comment <- str_replace_all(comment, "\\b\\d+\\s*doses?\\b", "") # Remove "X doses"
clean_comment <- str_replace_all(clean_comment, "\\b\\d+/\\d+\\b", "") # Remove date-like "X/X"
# Extract all relevant numerical values
numbers <- str_extract_all(clean_comment, "\\b\\d+\\.?\\d*\\b") %>% unlist() %>% as.numeric()
highest_value <- ifelse(length(numbers) > 0, max(numbers, na.rm = TRUE), NA)
first_value <- ifelse(length(numbers) > 0, numbers[1], NA)
multiple_values <- ifelse(length(numbers) > 1, 1, 0)
# Missing flag is 1 if no valid numbers or if explicit missing indicators are present
missing_flag <- ifelse(length(numbers) == 0 | str_detect(comment, "<|not detected|N/A|no levels available"), 1, 0)
multiple_values <- ifelse(missing_flag == 1, NA, multiple_values)
# Extract goal range (handles "goal was X-Y", "goal is X-Y", and "goal X-Y")
goal_match <- str_match(clean_comment, "goal (?:was |is )?(\\d+)[-–](\\d+)")
goal_min <- ifelse(!is.na(goal_match[2]), as.numeric(goal_match[2]), NA)
goal_max <- ifelse(!is.na(goal_match[3]), as.numeric(goal_match[3]), NA)
return(c(highest_value, first_value, multiple_values, missing_flag, goal_min, goal_max))
}
st_comments_vanc = st_comments %>% filter(Field == "supratherapeutic_vancomyci")
View(st_comments_vanc)
st_comments_vanc = st_comments %>% filter(Field == "supratherapeutic_vancomyci")%>%
mutate(highest_group = case_when(
highest_value >= 15 & highest_value < 20 ~ "15-<20",
highest_value >= 20 & highest_value < 25 ~ "20-<25",
highest_value >= 25 & highest_value < 30 ~ "25-<30",
highest_value >= 30                     ~ "≥30",
TRUE ~ NA_character_),
first_group = case_when(
first_value >= 15 & first_value < 20 ~ "15-<20",
first_value >= 20 & first_value < 25 ~ "20-<25",
first_value >= 25 & first_value < 30 ~ "25-<30",
first_value >= 30                     ~ "≥30",
TRUE ~ NA_character_))
View(st_comments_vanc)
View(data_d_report)
hist(data_d_report$time_flag_to_AKI)
hist(data_d_report$time_flag_to_AKI);hist(data_d_report$time_flag_to_peak)
plot(data_d_report$time_flag_to_AKI, data_d_report$time_flag_to_peak)
ggplot(data = data_d_report, aes(x = time_flag_to_AKI, y = time_flag_to_peak)) + geom_point()
ggplot(data = data_d_report, aes(x = time_flag_to_AKI, y = time_flag_to_peak)) + geom_point() + theme_minimal()
ggplot(data = data_d_report, aes(x = time_flag_to_AKI, y = time_flag_to_peak)) + geom_point() + theme_minimal() + geom_abline(slope = 1, intercept = 0)
table(data_d_report$time_flag_to_AKI)
hist(data_d_report$time_flag_to_AKI)
table(data_d_report$time_flag_to_AKI)
#hist(data_d_report$time_flag_to_peak)
table(data_d_report$time_flag_to_peak)
ggplot(data = data_d_report, aes(x = time_flag_to_AKI)) + geom_dotplot()
ggplot(data = data_d_report, aes(x = time_flag_to_AKI)) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5) +
scale_y_continuous(name = "Count", breaks = scales::pretty_breaks()) +
scale_x_continuous(breaks = seq(min(data_d_report$time_flag_to_AKI, na.rm = TRUE),
max(data_d_report$time_flag_to_AKI, na.rm = TRUE),
by = 1)) +
theme_minimal()
ggplot(data = data_d_report, aes(x = time_flag_to_AKI)) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, binwidth = 1) +
scale_y_continuous(name = "Count") +
scale_x_continuous(breaks = seq(floor(min(data_d_report$time_flag_to_AKI, na.rm = TRUE)),
ceiling(max(data_d_report$time_flag_to_AKI, na.rm = TRUE)),
by = 1)) +
theme_minimal()
View(data_d_report)
ggplot(data = data_d_report, aes(x = time_flag_to_AKI, y= initial_aki_stage)) + geom_dotplot()
ggplot(data = data_d_report, aes(x = initial_aki_stage, y=time_flag_to_AKI )) + geom_dotplot()
ggplot(data = data_d_report, aes(x = initial_aki_stage, y=time_flag_to_AKI)) + geom_dotplot()
ggplot(data = data_d_report, aes(y=time_flag_to_AKI, group = initial_AKI_stage, fill = initial_AKI_stage)) + geom_dotplot()
ggplot(data = data_d_report, aes(y=time_flag_to_AKI, group = initial_aki_stage, fill = initial_aki_stage)) + geom_dotplot()
ggplot(data = data_d_report, aes(x=time_flag_to_AKI, group = initial_aki_stage, fill = initial_aki_stage)) + geom_dotplot()
ggplot(data = data_d_report, aes(x=initial_aki_stage,y = time_flag_to_AKI , group = initial_aki_stage, fill = initial_aki_stage)) + geom_dotplot()
ggplot(data = data_d_report, aes(x=initial_aki_stage,y = time_flag_to_AKI , group = initial_aki_stage, fill = initial_aki_stage)) + geom_dotplot(binaxis = 'y')
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center")
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") + scale_x_discrete()
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") + scale_y_discrete()
geom_dotplot(binaxis = 'y', stackdir = "center") + scale_y_continuous((breaks = seq(..., by = 1))
ggplot(data = data_d_report,
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") + scale_y_continuous(breaks = seq(by=1))
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") + scale_y_continuous(...,breaks = seq(by=1))
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") + scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1))
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) + theme_minimal()
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days Flag-AKI")+ theme_minimal()
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=4), limits = c(0,40)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
View(data_d_report)
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
table(data_d_report$time_flag_to_AKI); table(data_d_report$time_flag_to_AKI, data_d_report$initial_aki_stage)
# overall distn of days from flag to AKI
hist(data_d_report$time_flag_to_AKI)
table(data_d_report$time_flag_to_AKI)
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center") +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center", dotsize = 0.5) +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center", dotsize = 0.75) +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center", dotsize = 0.75, binwidth = 10) +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center", dotsize = 0.75, binwidth = 1) +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center", dotsize = 0.75, binwidth = 0.75) +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
data_d_report %>% filter(time_flag_to_AKI > 2)
data_d_report %>% filter(time_flag_to_AKI > 2) %>% select(record_id, time_flag_to_AKI, initial_aki_stage, FLAG_Stage, FLAG_Dates)
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center", dotsize = 0.7, binwidth = 0.75) +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
# by stage
ggplot(data = data_d_report,
aes(x=initial_aki_stage,y = time_flag_to_AKI ,
group = initial_aki_stage, fill = initial_aki_stage)) +
geom_dotplot(binaxis = 'y', stackdir = "center", dotsize = 0.5, binwidth = 0.75) +
scale_y_continuous(breaks = seq(0,max(data_d_report$time_flag_to_AKI),by=1)) +
labs(x = "Initial AKI Stage", y = "Days from Flag to AKI")+ theme_minimal()
table(data_d_report$time_flag_to_AKI, data_d_report$initial_aki_stage)
# list of subjects with > 2 days from flag to AKI (n = 13)- only one has a different stage from peak of these, 6 have different dates from peak
data_d_report %>% filter(time_flag_to_AKI > 2) %>% select(record_id, time_flag_to_AKI, initial_aki_stage, FLAG_Stage, FLAG_Dates)
# list of subjects with > 2 days from flag to AKI (n = 13)- only one has a different stage from peak of these, 6 have different dates from peak
data_d_report %>% filter(time_flag_to_AKI == 0) %>% select(record_id, time_flag_to_AKI, initial_aki_stage, FLAG_Stage, FLAG_Dates)
# list of subjects with > 2 days from flag to AKI (n = 13)- only one has a different stage from peak of these, 6 have different dates from peak
data_d_report %>% filter(time_flag_to_AKI > 3) %>% select(record_id, time_flag_to_AKI, initial_aki_stage, FLAG_Stage, FLAG_Dates)
View(st_comments_vanc)
